Title: Command Line Interpreter Examples

<h3>Command Line Interpreter Examples</h3>

<p>
The readline module is required to control PyQt and PyQwt widgets from the
Python command line interpreter or for instance <a href=
"http://ipython.scipy.org">IPython</a>.
</p>

<p>
You can also use PyCute (a Python shell for PyQt and included with PyQwt) to
play with the examples, if you have no readline module (Python compiled with
MicroSoft Visual C).
</p>

<p>
The programming style imposed by PyQt (and other GUI toolkit wrappers) is to
create an application instance with some widgets and to enter into an event
loop that locks you from the Python command line interpreter.
PyQwt includes a tiny module that allows to:
<ul>
  <li>create and control (Py)Qt widgets from the command line interpreter.</li>
  <li>interact with those widgets through (Py)Qt's GUI.</li>
</ul>
</p>

<p>
Start the Python interpreter and type:
<pre>
>>> import iqt # not needed if you are running PyCute instead of Python
</pre>
to create an application instance and to put an event processing function on
the event hook of the readline module.
The GNU readline library closes the event loop by calling this function
at a maximum rate of 10 times per second while reading the keyboard input. 
</p>
<p>
The module qwt.qplt provides an interpreter friendly interface to the QwtPlot
class. Type:
<pre>
>>> from qwt.qplt import *
</pre>
to load the classes Plot, IPlot, Curve, Axis, Pen and Symbol.
</p>
<p>
Type:
<pre>
>>> x = arange(-2*pi, 2*pi, 0.01)
</pre>
to create an array of x-values, ranging from -2*pi to 2*pi with a step size
of 0.01.
</p>
<p>
Type:
<pre>
>>> p = Plot(Curve(x, cos(x), Pen(Magenta, 2), "cos(x)"),
...          Curve(x, exp(x), Pen(Red), "exp(x)", Right),
...          Axis(Right, Logarithmic),
...          "PyQwt using Qwt-%s -- http://qwt.sf.net" % QWT_VERSION_STR)
</pre>
to show a plot with two curves, a linear x-axis, a linear y-axis, a logarithmic
y-axis and a title.
</p>
<p><img src="examples/CliDemo1.png" width=600 height=400 border=1></p>
<p>
The visibility of the curves can be toggled by clicking on the legend items.
The plot widget has an infinite deep zoom stack: left-click & drag to zoom and
right-click to unzoom.
</p>
<p>
Type:
<pre>
>>> x = x[0:-1:10]
</pre>
to create a new array of x-values by selecting every 10th item of the old
array.
</p>
Type:
<pre>
>>> p.plot(Curve(x, cos(x-pi/4), Symbol(Circle, Yellow), "circle"),
...        Curve(x, cos(x+pi/4), Pen(Blue), Symbol(Square, Cyan), "square"))
</pre>
to add two more curves to the plot. 
</p>
<p><img src="examples/CliDemo2.png" width=600 height=400 border=1></p>
<p>
See the <a href="doc/qwt-qplt.html">qwt.qplt documentation</a> for detailed
information.
</p>

<!--
Local Variables:
mode: HTML
End:
-->
